{"ast":null,"code":"import _forceReduced from './_forceReduced';\nimport _isArrayLike from './_isArrayLike';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\nvar preservingReduced = function (xf) {\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return xf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      var ret = xf['@@transducer/step'](result, input);\n      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n    }\n  };\n};\nvar _flatCat = function _xcat(xf) {\n  var rxf = preservingReduced(xf);\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return rxf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n    }\n  };\n};\nexport default _flatCat;","map":{"version":3,"names":["_forceReduced","_isArrayLike","_reduce","_xfBase","preservingReduced","xf","init","result","input","ret","_flatCat","_xcat","rxf"],"sources":["C:/Users/Suweb Reza/OneDrive/Desktop/yello code hackathon/yellocodefrontend/node_modules/ramda/es/internal/_flatCat.js"],"sourcesContent":["import _forceReduced from './_forceReduced';\nimport _isArrayLike from './_isArrayLike';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar preservingReduced = function (xf) {\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return xf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      var ret = xf['@@transducer/step'](result, input);\n      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n    }\n  };\n};\n\nvar _flatCat = function _xcat(xf) {\n  var rxf = preservingReduced(xf);\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return rxf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n    }\n  };\n};\n\nexport default _flatCat;"],"mappings":"AAAA,OAAOA,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,OAAO,MAAM,WAAW;AAE/B,IAAIC,iBAAiB,GAAG,UAAUC,EAAE,EAAE;EACpC,OAAO;IACL,mBAAmB,EAAEF,OAAO,CAACG,IAAI;IACjC,qBAAqB,EAAE,UAAUC,MAAM,EAAE;MACvC,OAAOF,EAAE,CAAC,qBAAqB,CAAC,CAACE,MAAM,CAAC;IAC1C,CAAC;IACD,mBAAmB,EAAE,UAAUA,MAAM,EAAEC,KAAK,EAAE;MAC5C,IAAIC,GAAG,GAAGJ,EAAE,CAAC,mBAAmB,CAAC,CAACE,MAAM,EAAEC,KAAK,CAAC;MAChD,OAAOC,GAAG,CAAC,sBAAsB,CAAC,GAAGT,aAAa,CAACS,GAAG,CAAC,GAAGA,GAAG;IAC/D;EACF,CAAC;AACH,CAAC;AAED,IAAIC,QAAQ,GAAG,SAASC,KAAK,CAACN,EAAE,EAAE;EAChC,IAAIO,GAAG,GAAGR,iBAAiB,CAACC,EAAE,CAAC;EAC/B,OAAO;IACL,mBAAmB,EAAEF,OAAO,CAACG,IAAI;IACjC,qBAAqB,EAAE,UAAUC,MAAM,EAAE;MACvC,OAAOK,GAAG,CAAC,qBAAqB,CAAC,CAACL,MAAM,CAAC;IAC3C,CAAC;IACD,mBAAmB,EAAE,UAAUA,MAAM,EAAEC,KAAK,EAAE;MAC5C,OAAO,CAACP,YAAY,CAACO,KAAK,CAAC,GAAGN,OAAO,CAACU,GAAG,EAAEL,MAAM,EAAE,CAACC,KAAK,CAAC,CAAC,GAAGN,OAAO,CAACU,GAAG,EAAEL,MAAM,EAAEC,KAAK,CAAC;IAC3F;EACF,CAAC;AACH,CAAC;AAED,eAAeE,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}