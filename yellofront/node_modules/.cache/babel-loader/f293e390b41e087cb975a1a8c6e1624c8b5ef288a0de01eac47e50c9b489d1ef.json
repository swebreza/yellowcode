{"ast":null,"code":"module.exports = function () {\n  'use script';\n\n  const R = require('./ramda.js');\n  const {\n    isString,\n    mapToObject\n  } = require('./utils.js');\n  const LOG_LEVELS = {\n    INFO: 'Info',\n    ERROR: 'Error'\n  };\n  const LOG_LEVEL_NAMES = R.values(LOG_LEVELS);\n  const LEVEL_METHOD_NAMES = {\n    [LOG_LEVELS.INFO]: 'info',\n    [LOG_LEVELS.ERROR]: 'error'\n  };\n  const LEVEL_RANK = {\n    [LOG_LEVELS.INFO]: 0,\n    [LOG_LEVELS.ERROR]: 1\n  };\n  const getLogThreshold = providedThreshold => {\n    if (!isString(providedThreshold)) {\n      return LOG_LEVELS.INFO;\n    }\n    const threshold = R.find(levelName => levelName.toLowerCase() === providedThreshold.toLowerCase(), LOG_LEVEL_NAMES);\n    return threshold || LOG_LEVELS.INFO;\n  };\n  const getLogger = (logger, providedLevel) => {\n    if (!logger) {\n      return () => {};\n    }\n    const thresholdLevel = getLogThreshold(providedLevel);\n    const levelToMethodMapping = mapToObject(levelName => logger[LEVEL_METHOD_NAMES[levelName]] || (message => logger(`${levelName}: ${message}`)), LOG_LEVEL_NAMES);\n    return _ref => {\n      let {\n        level = LOG_LEVELS.INFO,\n        message\n      } = _ref;\n      if (levelToMethodMapping[level] && LEVEL_RANK[level] >= LEVEL_RANK[thresholdLevel]) {\n        levelToMethodMapping[level](message);\n      }\n    };\n  };\n  return {\n    LOG_LEVELS,\n    getLogger\n  };\n}();","map":{"version":3,"names":["module","exports","R","require","isString","mapToObject","LOG_LEVELS","INFO","ERROR","LOG_LEVEL_NAMES","values","LEVEL_METHOD_NAMES","LEVEL_RANK","getLogThreshold","providedThreshold","threshold","find","levelName","toLowerCase","getLogger","logger","providedLevel","thresholdLevel","levelToMethodMapping","message","level"],"sources":["C:/Users/Suweb Reza/OneDrive/Desktop/yello code hackathon/yellocodefrontend/node_modules/splitwise/src/logger.js"],"sourcesContent":["module.exports = (function () {\n  'use script'\n\n  const R = require('./ramda.js')\n  const { isString, mapToObject } = require('./utils.js')\n\n  const LOG_LEVELS = {\n    INFO: 'Info',\n    ERROR: 'Error'\n  }\n\n  const LOG_LEVEL_NAMES = R.values(LOG_LEVELS)\n\n  const LEVEL_METHOD_NAMES = {\n    [LOG_LEVELS.INFO]: 'info',\n    [LOG_LEVELS.ERROR]: 'error'\n  }\n\n  const LEVEL_RANK = {\n    [LOG_LEVELS.INFO]: 0,\n    [LOG_LEVELS.ERROR]: 1\n  }\n\n  const getLogThreshold = (providedThreshold) => {\n    if (!isString(providedThreshold)) {\n      return LOG_LEVELS.INFO\n    }\n    const threshold = R.find(levelName => (\n      levelName.toLowerCase() === providedThreshold.toLowerCase()\n    ), LOG_LEVEL_NAMES)\n\n    return threshold || LOG_LEVELS.INFO\n  }\n\n  const getLogger = (logger, providedLevel) => {\n    if (!logger) {\n      return () => { }\n    }\n    const thresholdLevel = getLogThreshold(providedLevel)\n    const levelToMethodMapping = mapToObject(\n      levelName => (\n        logger[LEVEL_METHOD_NAMES[levelName]] ||\n        (message => logger(`${levelName}: ${message}`))\n      ),\n      LOG_LEVEL_NAMES\n    )\n\n    return ({ level = LOG_LEVELS.INFO, message }) => {\n      if (levelToMethodMapping[level] && LEVEL_RANK[level] >= LEVEL_RANK[thresholdLevel]) {\n        levelToMethodMapping[level](message)\n      }\n    }\n  }\n\n  return { LOG_LEVELS, getLogger }\n}())\n"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAI,YAAY;EAC5B,YAAY;;EAEZ,MAAMC,CAAC,GAAGC,OAAO,CAAC,YAAY,CAAC;EAC/B,MAAM;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAGF,OAAO,CAAC,YAAY,CAAC;EAEvD,MAAMG,UAAU,GAAG;IACjBC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE;EACT,CAAC;EAED,MAAMC,eAAe,GAAGP,CAAC,CAACQ,MAAM,CAACJ,UAAU,CAAC;EAE5C,MAAMK,kBAAkB,GAAG;IACzB,CAACL,UAAU,CAACC,IAAI,GAAG,MAAM;IACzB,CAACD,UAAU,CAACE,KAAK,GAAG;EACtB,CAAC;EAED,MAAMI,UAAU,GAAG;IACjB,CAACN,UAAU,CAACC,IAAI,GAAG,CAAC;IACpB,CAACD,UAAU,CAACE,KAAK,GAAG;EACtB,CAAC;EAED,MAAMK,eAAe,GAAIC,iBAAiB,IAAK;IAC7C,IAAI,CAACV,QAAQ,CAACU,iBAAiB,CAAC,EAAE;MAChC,OAAOR,UAAU,CAACC,IAAI;IACxB;IACA,MAAMQ,SAAS,GAAGb,CAAC,CAACc,IAAI,CAACC,SAAS,IAChCA,SAAS,CAACC,WAAW,EAAE,KAAKJ,iBAAiB,CAACI,WAAW,EAC1D,EAAET,eAAe,CAAC;IAEnB,OAAOM,SAAS,IAAIT,UAAU,CAACC,IAAI;EACrC,CAAC;EAED,MAAMY,SAAS,GAAG,CAACC,MAAM,EAAEC,aAAa,KAAK;IAC3C,IAAI,CAACD,MAAM,EAAE;MACX,OAAO,MAAM,CAAE,CAAC;IAClB;IACA,MAAME,cAAc,GAAGT,eAAe,CAACQ,aAAa,CAAC;IACrD,MAAME,oBAAoB,GAAGlB,WAAW,CACtCY,SAAS,IACPG,MAAM,CAACT,kBAAkB,CAACM,SAAS,CAAC,CAAC,KACpCO,OAAO,IAAIJ,MAAM,CAAE,GAAEH,SAAU,KAAIO,OAAQ,EAAC,CAAC,CAC/C,EACDf,eAAe,CAChB;IAED,OAAO,QAA0C;MAAA,IAAzC;QAAEgB,KAAK,GAAGnB,UAAU,CAACC,IAAI;QAAEiB;MAAQ,CAAC;MAC1C,IAAID,oBAAoB,CAACE,KAAK,CAAC,IAAIb,UAAU,CAACa,KAAK,CAAC,IAAIb,UAAU,CAACU,cAAc,CAAC,EAAE;QAClFC,oBAAoB,CAACE,KAAK,CAAC,CAACD,OAAO,CAAC;MACtC;IACF,CAAC;EACH,CAAC;EAED,OAAO;IAAElB,UAAU;IAAEa;EAAU,CAAC;AAClC,CAAC,EAAG"},"metadata":{},"sourceType":"script","externalDependencies":[]}