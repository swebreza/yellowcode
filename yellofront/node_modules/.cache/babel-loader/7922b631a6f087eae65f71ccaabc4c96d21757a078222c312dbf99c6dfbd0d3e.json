{"ast":null,"code":"import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport _filter from './internal/_filter';\nimport flip from './flip';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nvar intersection = /*#__PURE__*/_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  return uniq(_filter(flip(_contains)(lookupList), filteredList));\n});\nexport default intersection;","map":{"version":3,"names":["_contains","_curry2","_filter","flip","uniq","intersection","list1","list2","lookupList","filteredList","length"],"sources":["C:/Users/Suweb Reza/OneDrive/Desktop/yello code hackathon/yellocodefrontend/node_modules/ramda/es/intersection.js"],"sourcesContent":["import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport _filter from './internal/_filter';\nimport flip from './flip';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nvar intersection = /*#__PURE__*/_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  return uniq(_filter(flip(_contains)(lookupList), filteredList));\n});\nexport default intersection;"],"mappings":"AAAA,OAAOA,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,YAAY,GAAG,aAAaJ,OAAO,CAAC,SAASI,YAAY,CAACC,KAAK,EAAEC,KAAK,EAAE;EAC1E,IAAIC,UAAU,EAAEC,YAAY;EAC5B,IAAIH,KAAK,CAACI,MAAM,GAAGH,KAAK,CAACG,MAAM,EAAE;IAC/BF,UAAU,GAAGF,KAAK;IAClBG,YAAY,GAAGF,KAAK;EACtB,CAAC,MAAM;IACLC,UAAU,GAAGD,KAAK;IAClBE,YAAY,GAAGH,KAAK;EACtB;EACA,OAAOF,IAAI,CAACF,OAAO,CAACC,IAAI,CAACH,SAAS,CAAC,CAACQ,UAAU,CAAC,EAAEC,YAAY,CAAC,CAAC;AACjE,CAAC,CAAC;AACF,eAAeJ,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}