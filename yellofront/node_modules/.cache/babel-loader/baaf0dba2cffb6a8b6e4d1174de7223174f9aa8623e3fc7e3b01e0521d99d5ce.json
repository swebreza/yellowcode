{"ast":null,"code":"var crypto = require('crypto'),\n  sha1 = require('./sha1'),\n  http = require('http'),\n  https = require('https'),\n  URL = require('url'),\n  querystring = require('querystring'),\n  OAuthUtils = require('./_utils');\nexports.OAuth = function (requestUrl, accessUrl, consumerKey, consumerSecret, version, authorize_callback, signatureMethod, nonceSize, customHeaders) {\n  this._isEcho = false;\n  this._requestUrl = requestUrl;\n  this._accessUrl = accessUrl;\n  this._consumerKey = consumerKey;\n  this._consumerSecret = this._encodeData(consumerSecret);\n  if (signatureMethod == \"RSA-SHA1\") {\n    this._privateKey = consumerSecret;\n  }\n  this._version = version;\n  if (authorize_callback === undefined) {\n    this._authorize_callback = \"oob\";\n  } else {\n    this._authorize_callback = authorize_callback;\n  }\n  if (signatureMethod != \"PLAINTEXT\" && signatureMethod != \"HMAC-SHA1\" && signatureMethod != \"RSA-SHA1\") throw new Error(\"Un-supported signature method: \" + signatureMethod);\n  this._signatureMethod = signatureMethod;\n  this._nonceSize = nonceSize || 32;\n  this._headers = customHeaders || {\n    \"Accept\": \"*/*\",\n    \"Connection\": \"close\",\n    \"User-Agent\": \"Node authentication\"\n  };\n  this._clientOptions = this._defaultClientOptions = {\n    \"requestTokenHttpMethod\": \"POST\",\n    \"accessTokenHttpMethod\": \"POST\",\n    \"followRedirects\": true\n  };\n  this._oauthParameterSeperator = \",\";\n};\nexports.OAuthEcho = function (realm, verify_credentials, consumerKey, consumerSecret, version, signatureMethod, nonceSize, customHeaders) {\n  this._isEcho = true;\n  this._realm = realm;\n  this._verifyCredentials = verify_credentials;\n  this._consumerKey = consumerKey;\n  this._consumerSecret = this._encodeData(consumerSecret);\n  if (signatureMethod == \"RSA-SHA1\") {\n    this._privateKey = consumerSecret;\n  }\n  this._version = version;\n  if (signatureMethod != \"PLAINTEXT\" && signatureMethod != \"HMAC-SHA1\" && signatureMethod != \"RSA-SHA1\") throw new Error(\"Un-supported signature method: \" + signatureMethod);\n  this._signatureMethod = signatureMethod;\n  this._nonceSize = nonceSize || 32;\n  this._headers = customHeaders || {\n    \"Accept\": \"*/*\",\n    \"Connection\": \"close\",\n    \"User-Agent\": \"Node authentication\"\n  };\n  this._oauthParameterSeperator = \",\";\n};\nexports.OAuthEcho.prototype = exports.OAuth.prototype;\nexports.OAuth.prototype._getTimestamp = function () {\n  return Math.floor(new Date().getTime() / 1000);\n};\nexports.OAuth.prototype._encodeData = function (toEncode) {\n  if (toEncode == null || toEncode == \"\") return \"\";else {\n    var result = encodeURIComponent(toEncode);\n    // Fix the mismatch between OAuth's  RFC3986's and Javascript's beliefs in what is right and wrong ;)\n    return result.replace(/\\!/g, \"%21\").replace(/\\'/g, \"%27\").replace(/\\(/g, \"%28\").replace(/\\)/g, \"%29\").replace(/\\*/g, \"%2A\");\n  }\n};\nexports.OAuth.prototype._decodeData = function (toDecode) {\n  if (toDecode != null) {\n    toDecode = toDecode.replace(/\\+/g, \" \");\n  }\n  return decodeURIComponent(toDecode);\n};\nexports.OAuth.prototype._getSignature = function (method, url, parameters, tokenSecret) {\n  var signatureBase = this._createSignatureBase(method, url, parameters);\n  return this._createSignature(signatureBase, tokenSecret);\n};\nexports.OAuth.prototype._normalizeUrl = function (url) {\n  var parsedUrl = URL.parse(url, true);\n  var port = \"\";\n  if (parsedUrl.port) {\n    if (parsedUrl.protocol == \"http:\" && parsedUrl.port != \"80\" || parsedUrl.protocol == \"https:\" && parsedUrl.port != \"443\") {\n      port = \":\" + parsedUrl.port;\n    }\n  }\n  if (!parsedUrl.pathname || parsedUrl.pathname == \"\") parsedUrl.pathname = \"/\";\n  return parsedUrl.protocol + \"//\" + parsedUrl.hostname + port + parsedUrl.pathname;\n};\n\n// Is the parameter considered an OAuth parameter\nexports.OAuth.prototype._isParameterNameAnOAuthParameter = function (parameter) {\n  var m = parameter.match('^oauth_');\n  if (m && m[0] === \"oauth_\") {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n// build the OAuth request authorization header\nexports.OAuth.prototype._buildAuthorizationHeaders = function (orderedParameters) {\n  var authHeader = \"OAuth \";\n  if (this._isEcho) {\n    authHeader += 'realm=\"' + this._realm + '\",';\n  }\n  for (var i = 0; i < orderedParameters.length; i++) {\n    // Whilst the all the parameters should be included within the signature, only the oauth_ arguments\n    // should appear within the authorization header.\n    if (this._isParameterNameAnOAuthParameter(orderedParameters[i][0])) {\n      authHeader += \"\" + this._encodeData(orderedParameters[i][0]) + \"=\\\"\" + this._encodeData(orderedParameters[i][1]) + \"\\\"\" + this._oauthParameterSeperator;\n    }\n  }\n  authHeader = authHeader.substring(0, authHeader.length - this._oauthParameterSeperator.length);\n  return authHeader;\n};\n\n// Takes an object literal that represents the arguments, and returns an array\n// of argument/value pairs.\nexports.OAuth.prototype._makeArrayOfArgumentsHash = function (argumentsHash) {\n  var argument_pairs = [];\n  for (var key in argumentsHash) {\n    if (argumentsHash.hasOwnProperty(key)) {\n      var value = argumentsHash[key];\n      if (Array.isArray(value)) {\n        for (var i = 0; i < value.length; i++) {\n          argument_pairs[argument_pairs.length] = [key, value[i]];\n        }\n      } else {\n        argument_pairs[argument_pairs.length] = [key, value];\n      }\n    }\n  }\n  return argument_pairs;\n};\n\n// Sorts the encoded key value pairs by encoded name, then encoded value\nexports.OAuth.prototype._sortRequestParams = function (argument_pairs) {\n  // Sort by name, then value.\n  argument_pairs.sort(function (a, b) {\n    if (a[0] == b[0]) {\n      return a[1] < b[1] ? -1 : 1;\n    } else return a[0] < b[0] ? -1 : 1;\n  });\n  return argument_pairs;\n};\nexports.OAuth.prototype._normaliseRequestParams = function (args) {\n  var argument_pairs = this._makeArrayOfArgumentsHash(args);\n  // First encode them #3.4.1.3.2 .1\n  for (var i = 0; i < argument_pairs.length; i++) {\n    argument_pairs[i][0] = this._encodeData(argument_pairs[i][0]);\n    argument_pairs[i][1] = this._encodeData(argument_pairs[i][1]);\n  }\n\n  // Then sort them #3.4.1.3.2 .2\n  argument_pairs = this._sortRequestParams(argument_pairs);\n\n  // Then concatenate together #3.4.1.3.2 .3 & .4\n  var args = \"\";\n  for (var i = 0; i < argument_pairs.length; i++) {\n    args += argument_pairs[i][0];\n    args += \"=\";\n    args += argument_pairs[i][1];\n    if (i < argument_pairs.length - 1) args += \"&\";\n  }\n  return args;\n};\nexports.OAuth.prototype._createSignatureBase = function (method, url, parameters) {\n  url = this._encodeData(this._normalizeUrl(url));\n  parameters = this._encodeData(parameters);\n  return method.toUpperCase() + \"&\" + url + \"&\" + parameters;\n};\nexports.OAuth.prototype._createSignature = function (signatureBase, tokenSecret) {\n  if (tokenSecret === undefined) var tokenSecret = \"\";else tokenSecret = this._encodeData(tokenSecret);\n  // consumerSecret is already encoded\n  var key = this._consumerSecret + \"&\" + tokenSecret;\n  var hash = \"\";\n  if (this._signatureMethod == \"PLAINTEXT\") {\n    hash = key;\n  } else if (this._signatureMethod == \"RSA-SHA1\") {\n    key = this._privateKey || \"\";\n    hash = crypto.createSign(\"RSA-SHA1\").update(signatureBase).sign(key, 'base64');\n  } else {\n    if (crypto.Hmac) {\n      hash = crypto.createHmac(\"sha1\", key).update(signatureBase).digest(\"base64\");\n    } else {\n      hash = sha1.HMACSHA1(key, signatureBase);\n    }\n  }\n  return hash;\n};\nexports.OAuth.prototype.NONCE_CHARS = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\nexports.OAuth.prototype._getNonce = function (nonceSize) {\n  var result = [];\n  var chars = this.NONCE_CHARS;\n  var char_pos;\n  var nonce_chars_length = chars.length;\n  for (var i = 0; i < nonceSize; i++) {\n    char_pos = Math.floor(Math.random() * nonce_chars_length);\n    result[i] = chars[char_pos];\n  }\n  return result.join('');\n};\nexports.OAuth.prototype._createClient = function (port, hostname, method, path, headers, sslEnabled) {\n  var options = {\n    host: hostname,\n    port: port,\n    path: path,\n    method: method,\n    headers: headers\n  };\n  var httpModel;\n  if (sslEnabled) {\n    httpModel = https;\n  } else {\n    httpModel = http;\n  }\n  return httpModel.request(options);\n};\nexports.OAuth.prototype._prepareParameters = function (oauth_token, oauth_token_secret, method, url, extra_params) {\n  var oauthParameters = {\n    \"oauth_timestamp\": this._getTimestamp(),\n    \"oauth_nonce\": this._getNonce(this._nonceSize),\n    \"oauth_version\": this._version,\n    \"oauth_signature_method\": this._signatureMethod,\n    \"oauth_consumer_key\": this._consumerKey\n  };\n  if (oauth_token) {\n    oauthParameters[\"oauth_token\"] = oauth_token;\n  }\n  var sig;\n  if (this._isEcho) {\n    sig = this._getSignature(\"GET\", this._verifyCredentials, this._normaliseRequestParams(oauthParameters), oauth_token_secret);\n  } else {\n    if (extra_params) {\n      for (var key in extra_params) {\n        if (extra_params.hasOwnProperty(key)) oauthParameters[key] = extra_params[key];\n      }\n    }\n    var parsedUrl = URL.parse(url, false);\n    if (parsedUrl.query) {\n      var key2;\n      var extraParameters = querystring.parse(parsedUrl.query);\n      for (var key in extraParameters) {\n        var value = extraParameters[key];\n        if (typeof value == \"object\") {\n          // TODO: This probably should be recursive\n          for (key2 in value) {\n            oauthParameters[key + \"[\" + key2 + \"]\"] = value[key2];\n          }\n        } else {\n          oauthParameters[key] = value;\n        }\n      }\n    }\n    sig = this._getSignature(method, url, this._normaliseRequestParams(oauthParameters), oauth_token_secret);\n  }\n  var orderedParameters = this._sortRequestParams(this._makeArrayOfArgumentsHash(oauthParameters));\n  orderedParameters[orderedParameters.length] = [\"oauth_signature\", sig];\n  return orderedParameters;\n};\nexports.OAuth.prototype._performSecureRequest = function (oauth_token, oauth_token_secret, method, url, extra_params, post_body, post_content_type, callback) {\n  var orderedParameters = this._prepareParameters(oauth_token, oauth_token_secret, method, url, extra_params);\n  if (!post_content_type) {\n    post_content_type = \"application/x-www-form-urlencoded\";\n  }\n  var parsedUrl = URL.parse(url, false);\n  if (parsedUrl.protocol == \"http:\" && !parsedUrl.port) parsedUrl.port = 80;\n  if (parsedUrl.protocol == \"https:\" && !parsedUrl.port) parsedUrl.port = 443;\n  var headers = {};\n  var authorization = this._buildAuthorizationHeaders(orderedParameters);\n  if (this._isEcho) {\n    headers[\"X-Verify-Credentials-Authorization\"] = authorization;\n  } else {\n    headers[\"Authorization\"] = authorization;\n  }\n  headers[\"Host\"] = parsedUrl.host;\n  for (var key in this._headers) {\n    if (this._headers.hasOwnProperty(key)) {\n      headers[key] = this._headers[key];\n    }\n  }\n\n  // Filter out any passed extra_params that are really to do with OAuth\n  for (var key in extra_params) {\n    if (this._isParameterNameAnOAuthParameter(key)) {\n      delete extra_params[key];\n    }\n  }\n  if ((method == \"POST\" || method == \"PUT\") && post_body == null && extra_params != null) {\n    // Fix the mismatch between the output of querystring.stringify() and this._encodeData()\n    post_body = querystring.stringify(extra_params).replace(/\\!/g, \"%21\").replace(/\\'/g, \"%27\").replace(/\\(/g, \"%28\").replace(/\\)/g, \"%29\").replace(/\\*/g, \"%2A\");\n  }\n  if (post_body) {\n    if (Buffer.isBuffer(post_body)) {\n      headers[\"Content-length\"] = post_body.length;\n    } else {\n      headers[\"Content-length\"] = Buffer.byteLength(post_body);\n    }\n  } else {\n    headers[\"Content-length\"] = 0;\n  }\n  headers[\"Content-Type\"] = post_content_type;\n  var path;\n  if (!parsedUrl.pathname || parsedUrl.pathname == \"\") parsedUrl.pathname = \"/\";\n  if (parsedUrl.query) path = parsedUrl.pathname + \"?\" + parsedUrl.query;else path = parsedUrl.pathname;\n  var request;\n  if (parsedUrl.protocol == \"https:\") {\n    request = this._createClient(parsedUrl.port, parsedUrl.hostname, method, path, headers, true);\n  } else {\n    request = this._createClient(parsedUrl.port, parsedUrl.hostname, method, path, headers);\n  }\n  var clientOptions = this._clientOptions;\n  if (callback) {\n    var data = \"\";\n    var self = this;\n\n    // Some hosts *cough* google appear to close the connection early / send no content-length header\n    // allow this behaviour.\n    var allowEarlyClose = OAuthUtils.isAnEarlyCloseHost(parsedUrl.hostname);\n    var callbackCalled = false;\n    var passBackControl = function (response) {\n      if (!callbackCalled) {\n        callbackCalled = true;\n        if (response.statusCode >= 200 && response.statusCode <= 299) {\n          callback(null, data, response);\n        } else {\n          // Follow 301 or 302 redirects with Location HTTP header\n          if ((response.statusCode == 301 || response.statusCode == 302) && clientOptions.followRedirects && response.headers && response.headers.location) {\n            self._performSecureRequest(oauth_token, oauth_token_secret, method, response.headers.location, extra_params, post_body, post_content_type, callback);\n          } else {\n            callback({\n              statusCode: response.statusCode,\n              data: data\n            }, data, response);\n          }\n        }\n      }\n    };\n    request.on('response', function (response) {\n      response.setEncoding('utf8');\n      response.on('data', function (chunk) {\n        data += chunk;\n      });\n      response.on('end', function () {\n        passBackControl(response);\n      });\n      response.on('close', function () {\n        if (allowEarlyClose) {\n          passBackControl(response);\n        }\n      });\n    });\n    request.on(\"error\", function (err) {\n      if (!callbackCalled) {\n        callbackCalled = true;\n        callback(err);\n      }\n    });\n    if ((method == \"POST\" || method == \"PUT\") && post_body != null && post_body != \"\") {\n      request.write(post_body);\n    }\n    request.end();\n  } else {\n    if ((method == \"POST\" || method == \"PUT\") && post_body != null && post_body != \"\") {\n      request.write(post_body);\n    }\n    return request;\n  }\n  return;\n};\nexports.OAuth.prototype.setClientOptions = function (options) {\n  var key,\n    mergedOptions = {},\n    hasOwnProperty = Object.prototype.hasOwnProperty;\n  for (key in this._defaultClientOptions) {\n    if (!hasOwnProperty.call(options, key)) {\n      mergedOptions[key] = this._defaultClientOptions[key];\n    } else {\n      mergedOptions[key] = options[key];\n    }\n  }\n  this._clientOptions = mergedOptions;\n};\nexports.OAuth.prototype.getOAuthAccessToken = function (oauth_token, oauth_token_secret, oauth_verifier, callback) {\n  var extraParams = {};\n  if (typeof oauth_verifier == \"function\") {\n    callback = oauth_verifier;\n  } else {\n    extraParams.oauth_verifier = oauth_verifier;\n  }\n  this._performSecureRequest(oauth_token, oauth_token_secret, this._clientOptions.accessTokenHttpMethod, this._accessUrl, extraParams, null, null, function (error, data, response) {\n    if (error) callback(error);else {\n      var results = querystring.parse(data);\n      var oauth_access_token = results[\"oauth_token\"];\n      delete results[\"oauth_token\"];\n      var oauth_access_token_secret = results[\"oauth_token_secret\"];\n      delete results[\"oauth_token_secret\"];\n      callback(null, oauth_access_token, oauth_access_token_secret, results);\n    }\n  });\n};\n\n// Deprecated\nexports.OAuth.prototype.getProtectedResource = function (url, method, oauth_token, oauth_token_secret, callback) {\n  this._performSecureRequest(oauth_token, oauth_token_secret, method, url, null, \"\", null, callback);\n};\nexports.OAuth.prototype.delete = function (url, oauth_token, oauth_token_secret, callback) {\n  return this._performSecureRequest(oauth_token, oauth_token_secret, \"DELETE\", url, null, \"\", null, callback);\n};\nexports.OAuth.prototype.get = function (url, oauth_token, oauth_token_secret, callback) {\n  return this._performSecureRequest(oauth_token, oauth_token_secret, \"GET\", url, null, \"\", null, callback);\n};\nexports.OAuth.prototype._putOrPost = function (method, url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n  var extra_params = null;\n  if (typeof post_content_type == \"function\") {\n    callback = post_content_type;\n    post_content_type = null;\n  }\n  if (typeof post_body != \"string\" && !Buffer.isBuffer(post_body)) {\n    post_content_type = \"application/x-www-form-urlencoded\";\n    extra_params = post_body;\n    post_body = null;\n  }\n  return this._performSecureRequest(oauth_token, oauth_token_secret, method, url, extra_params, post_body, post_content_type, callback);\n};\nexports.OAuth.prototype.put = function (url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n  return this._putOrPost(\"PUT\", url, oauth_token, oauth_token_secret, post_body, post_content_type, callback);\n};\nexports.OAuth.prototype.post = function (url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n  return this._putOrPost(\"POST\", url, oauth_token, oauth_token_secret, post_body, post_content_type, callback);\n};\n\n/**\n * Gets a request token from the OAuth provider and passes that information back\n * to the calling code.\n *\n * The callback should expect a function of the following form:\n *\n * function(err, token, token_secret, parsedQueryString) {}\n *\n * This method has optional parameters so can be called in the following 2 ways:\n *\n * 1) Primary use case: Does a basic request with no extra parameters\n *  getOAuthRequestToken( callbackFunction )\n *\n * 2) As above but allows for provision of extra parameters to be sent as part of the query to the server.\n *  getOAuthRequestToken( extraParams, callbackFunction )\n *\n * N.B. This method will HTTP POST verbs by default, if you wish to override this behaviour you will\n * need to provide a requestTokenHttpMethod option when creating the client.\n *\n **/\nexports.OAuth.prototype.getOAuthRequestToken = function (extraParams, callback) {\n  if (typeof extraParams == \"function\") {\n    callback = extraParams;\n    extraParams = {};\n  }\n  // Callbacks are 1.0A related\n  if (this._authorize_callback) {\n    extraParams[\"oauth_callback\"] = this._authorize_callback;\n  }\n  this._performSecureRequest(null, null, this._clientOptions.requestTokenHttpMethod, this._requestUrl, extraParams, null, null, function (error, data, response) {\n    if (error) callback(error);else {\n      var results = querystring.parse(data);\n      var oauth_token = results[\"oauth_token\"];\n      var oauth_token_secret = results[\"oauth_token_secret\"];\n      delete results[\"oauth_token\"];\n      delete results[\"oauth_token_secret\"];\n      callback(null, oauth_token, oauth_token_secret, results);\n    }\n  });\n};\nexports.OAuth.prototype.signUrl = function (url, oauth_token, oauth_token_secret, method) {\n  if (method === undefined) {\n    var method = \"GET\";\n  }\n  var orderedParameters = this._prepareParameters(oauth_token, oauth_token_secret, method, url, {});\n  var parsedUrl = URL.parse(url, false);\n  var query = \"\";\n  for (var i = 0; i < orderedParameters.length; i++) {\n    query += orderedParameters[i][0] + \"=\" + this._encodeData(orderedParameters[i][1]) + \"&\";\n  }\n  query = query.substring(0, query.length - 1);\n  return parsedUrl.protocol + \"//\" + parsedUrl.host + parsedUrl.pathname + \"?\" + query;\n};\nexports.OAuth.prototype.authHeader = function (url, oauth_token, oauth_token_secret, method) {\n  if (method === undefined) {\n    var method = \"GET\";\n  }\n  var orderedParameters = this._prepareParameters(oauth_token, oauth_token_secret, method, url, {});\n  return this._buildAuthorizationHeaders(orderedParameters);\n};","map":{"version":3,"names":["crypto","require","sha1","http","https","URL","querystring","OAuthUtils","exports","OAuth","requestUrl","accessUrl","consumerKey","consumerSecret","version","authorize_callback","signatureMethod","nonceSize","customHeaders","_isEcho","_requestUrl","_accessUrl","_consumerKey","_consumerSecret","_encodeData","_privateKey","_version","undefined","_authorize_callback","Error","_signatureMethod","_nonceSize","_headers","_clientOptions","_defaultClientOptions","_oauthParameterSeperator","OAuthEcho","realm","verify_credentials","_realm","_verifyCredentials","prototype","_getTimestamp","Math","floor","Date","getTime","toEncode","result","encodeURIComponent","replace","_decodeData","toDecode","decodeURIComponent","_getSignature","method","url","parameters","tokenSecret","signatureBase","_createSignatureBase","_createSignature","_normalizeUrl","parsedUrl","parse","port","protocol","pathname","hostname","_isParameterNameAnOAuthParameter","parameter","m","match","_buildAuthorizationHeaders","orderedParameters","authHeader","i","length","substring","_makeArrayOfArgumentsHash","argumentsHash","argument_pairs","key","hasOwnProperty","value","Array","isArray","_sortRequestParams","sort","a","b","_normaliseRequestParams","args","toUpperCase","hash","createSign","update","sign","Hmac","createHmac","digest","HMACSHA1","NONCE_CHARS","_getNonce","chars","char_pos","nonce_chars_length","random","join","_createClient","path","headers","sslEnabled","options","host","httpModel","request","_prepareParameters","oauth_token","oauth_token_secret","extra_params","oauthParameters","sig","query","key2","extraParameters","_performSecureRequest","post_body","post_content_type","callback","authorization","stringify","Buffer","isBuffer","byteLength","clientOptions","data","self","allowEarlyClose","isAnEarlyCloseHost","callbackCalled","passBackControl","response","statusCode","followRedirects","location","on","setEncoding","chunk","err","write","end","setClientOptions","mergedOptions","Object","call","getOAuthAccessToken","oauth_verifier","extraParams","accessTokenHttpMethod","error","results","oauth_access_token","oauth_access_token_secret","getProtectedResource","delete","get","_putOrPost","put","post","getOAuthRequestToken","requestTokenHttpMethod","signUrl"],"sources":["C:/Users/Suweb Reza/OneDrive/Desktop/yello code hackathon/yellocodefrontend/node_modules/oauth/lib/oauth.js"],"sourcesContent":["var crypto= require('crypto'),\n    sha1= require('./sha1'),\n    http= require('http'),\n    https= require('https'),\n    URL= require('url'),\n    querystring= require('querystring'),\n    OAuthUtils= require('./_utils');\n\nexports.OAuth= function(requestUrl, accessUrl, consumerKey, consumerSecret, version, authorize_callback, signatureMethod, nonceSize, customHeaders) {\n  this._isEcho = false;\n\n  this._requestUrl= requestUrl;\n  this._accessUrl= accessUrl;\n  this._consumerKey= consumerKey;\n  this._consumerSecret= this._encodeData( consumerSecret );\n  if (signatureMethod == \"RSA-SHA1\") {\n    this._privateKey = consumerSecret;\n  }\n  this._version= version;\n  if( authorize_callback === undefined ) {\n    this._authorize_callback= \"oob\";\n  }\n  else {\n    this._authorize_callback= authorize_callback;\n  }\n\n  if( signatureMethod != \"PLAINTEXT\" && signatureMethod != \"HMAC-SHA1\" && signatureMethod != \"RSA-SHA1\")\n    throw new Error(\"Un-supported signature method: \" + signatureMethod )\n  this._signatureMethod= signatureMethod;\n  this._nonceSize= nonceSize || 32;\n  this._headers= customHeaders || {\"Accept\" : \"*/*\",\n                                   \"Connection\" : \"close\",\n                                   \"User-Agent\" : \"Node authentication\"}\n  this._clientOptions= this._defaultClientOptions= {\"requestTokenHttpMethod\": \"POST\",\n                                                    \"accessTokenHttpMethod\": \"POST\",\n                                                    \"followRedirects\": true};\n  this._oauthParameterSeperator = \",\";\n};\n\nexports.OAuthEcho= function(realm, verify_credentials, consumerKey, consumerSecret, version, signatureMethod, nonceSize, customHeaders) {\n  this._isEcho = true;\n\n  this._realm= realm;\n  this._verifyCredentials = verify_credentials;\n  this._consumerKey= consumerKey;\n  this._consumerSecret= this._encodeData( consumerSecret );\n  if (signatureMethod == \"RSA-SHA1\") {\n    this._privateKey = consumerSecret;\n  }\n  this._version= version;\n\n  if( signatureMethod != \"PLAINTEXT\" && signatureMethod != \"HMAC-SHA1\" && signatureMethod != \"RSA-SHA1\")\n    throw new Error(\"Un-supported signature method: \" + signatureMethod );\n  this._signatureMethod= signatureMethod;\n  this._nonceSize= nonceSize || 32;\n  this._headers= customHeaders || {\"Accept\" : \"*/*\",\n                                   \"Connection\" : \"close\",\n                                   \"User-Agent\" : \"Node authentication\"};\n  this._oauthParameterSeperator = \",\";\n}\n\nexports.OAuthEcho.prototype = exports.OAuth.prototype;\n\nexports.OAuth.prototype._getTimestamp= function() {\n  return Math.floor( (new Date()).getTime() / 1000 );\n}\n\nexports.OAuth.prototype._encodeData= function(toEncode){\n if( toEncode == null || toEncode == \"\" ) return \"\"\n else {\n    var result= encodeURIComponent(toEncode);\n    // Fix the mismatch between OAuth's  RFC3986's and Javascript's beliefs in what is right and wrong ;)\n    return result.replace(/\\!/g, \"%21\")\n                 .replace(/\\'/g, \"%27\")\n                 .replace(/\\(/g, \"%28\")\n                 .replace(/\\)/g, \"%29\")\n                 .replace(/\\*/g, \"%2A\");\n }\n}\n\nexports.OAuth.prototype._decodeData= function(toDecode) {\n  if( toDecode != null ) {\n    toDecode = toDecode.replace(/\\+/g, \" \");\n  }\n  return decodeURIComponent( toDecode);\n}\n\nexports.OAuth.prototype._getSignature= function(method, url, parameters, tokenSecret) {\n  var signatureBase= this._createSignatureBase(method, url, parameters);\n  return this._createSignature( signatureBase, tokenSecret );\n}\n\nexports.OAuth.prototype._normalizeUrl= function(url) {\n  var parsedUrl= URL.parse(url, true)\n   var port =\"\";\n   if( parsedUrl.port ) {\n     if( (parsedUrl.protocol == \"http:\" && parsedUrl.port != \"80\" ) ||\n         (parsedUrl.protocol == \"https:\" && parsedUrl.port != \"443\") ) {\n           port= \":\" + parsedUrl.port;\n         }\n   }\n\n  if( !parsedUrl.pathname  || parsedUrl.pathname == \"\" ) parsedUrl.pathname =\"/\";\n\n  return parsedUrl.protocol + \"//\" + parsedUrl.hostname + port + parsedUrl.pathname;\n}\n\n// Is the parameter considered an OAuth parameter\nexports.OAuth.prototype._isParameterNameAnOAuthParameter= function(parameter) {\n  var m = parameter.match('^oauth_');\n  if( m && ( m[0] === \"oauth_\" ) ) {\n    return true;\n  }\n  else {\n    return false;\n  }\n};\n\n// build the OAuth request authorization header\nexports.OAuth.prototype._buildAuthorizationHeaders= function(orderedParameters) {\n  var authHeader=\"OAuth \";\n  if( this._isEcho ) {\n    authHeader += 'realm=\"' + this._realm + '\",';\n  }\n\n  for( var i= 0 ; i < orderedParameters.length; i++) {\n     // Whilst the all the parameters should be included within the signature, only the oauth_ arguments\n     // should appear within the authorization header.\n     if( this._isParameterNameAnOAuthParameter(orderedParameters[i][0]) ) {\n      authHeader+= \"\" + this._encodeData(orderedParameters[i][0])+\"=\\\"\"+ this._encodeData(orderedParameters[i][1])+\"\\\"\"+ this._oauthParameterSeperator;\n     }\n  }\n\n  authHeader= authHeader.substring(0, authHeader.length-this._oauthParameterSeperator.length);\n  return authHeader;\n}\n\n// Takes an object literal that represents the arguments, and returns an array\n// of argument/value pairs.\nexports.OAuth.prototype._makeArrayOfArgumentsHash= function(argumentsHash) {\n  var argument_pairs= [];\n  for(var key in argumentsHash ) {\n    if (argumentsHash.hasOwnProperty(key)) {\n       var value= argumentsHash[key];\n       if( Array.isArray(value) ) {\n         for(var i=0;i<value.length;i++) {\n           argument_pairs[argument_pairs.length]= [key, value[i]];\n         }\n       }\n       else {\n         argument_pairs[argument_pairs.length]= [key, value];\n       }\n    }\n  }\n  return argument_pairs;\n}\n\n// Sorts the encoded key value pairs by encoded name, then encoded value\nexports.OAuth.prototype._sortRequestParams= function(argument_pairs) {\n  // Sort by name, then value.\n  argument_pairs.sort(function(a,b) {\n      if ( a[0]== b[0] )  {\n        return a[1] < b[1] ? -1 : 1;\n      }\n      else return a[0] < b[0] ? -1 : 1;\n  });\n\n  return argument_pairs;\n}\n\nexports.OAuth.prototype._normaliseRequestParams= function(args) {\n  var argument_pairs= this._makeArrayOfArgumentsHash(args);\n  // First encode them #3.4.1.3.2 .1\n  for(var i=0;i<argument_pairs.length;i++) {\n    argument_pairs[i][0]= this._encodeData( argument_pairs[i][0] );\n    argument_pairs[i][1]= this._encodeData( argument_pairs[i][1] );\n  }\n\n  // Then sort them #3.4.1.3.2 .2\n  argument_pairs= this._sortRequestParams( argument_pairs );\n\n  // Then concatenate together #3.4.1.3.2 .3 & .4\n  var args= \"\";\n  for(var i=0;i<argument_pairs.length;i++) {\n      args+= argument_pairs[i][0];\n      args+= \"=\"\n      args+= argument_pairs[i][1];\n      if( i < argument_pairs.length-1 ) args+= \"&\";\n  }\n  return args;\n}\n\nexports.OAuth.prototype._createSignatureBase= function(method, url, parameters) {\n  url= this._encodeData( this._normalizeUrl(url) );\n  parameters= this._encodeData( parameters );\n  return method.toUpperCase() + \"&\" + url + \"&\" + parameters;\n}\n\nexports.OAuth.prototype._createSignature= function(signatureBase, tokenSecret) {\n   if( tokenSecret === undefined ) var tokenSecret= \"\";\n   else tokenSecret= this._encodeData( tokenSecret );\n   // consumerSecret is already encoded\n   var key= this._consumerSecret + \"&\" + tokenSecret;\n\n   var hash= \"\"\n   if( this._signatureMethod == \"PLAINTEXT\" ) {\n     hash= key;\n   }\n   else if (this._signatureMethod == \"RSA-SHA1\") {\n     key = this._privateKey || \"\";\n     hash= crypto.createSign(\"RSA-SHA1\").update(signatureBase).sign(key, 'base64');\n   }\n   else {\n       if( crypto.Hmac ) {\n         hash = crypto.createHmac(\"sha1\", key).update(signatureBase).digest(\"base64\");\n       }\n       else {\n         hash= sha1.HMACSHA1(key, signatureBase);\n       }\n   }\n   return hash;\n}\nexports.OAuth.prototype.NONCE_CHARS= ['a','b','c','d','e','f','g','h','i','j','k','l','m','n',\n              'o','p','q','r','s','t','u','v','w','x','y','z','A','B',\n              'C','D','E','F','G','H','I','J','K','L','M','N','O','P',\n              'Q','R','S','T','U','V','W','X','Y','Z','0','1','2','3',\n              '4','5','6','7','8','9'];\n\nexports.OAuth.prototype._getNonce= function(nonceSize) {\n   var result = [];\n   var chars= this.NONCE_CHARS;\n   var char_pos;\n   var nonce_chars_length= chars.length;\n\n   for (var i = 0; i < nonceSize; i++) {\n       char_pos= Math.floor(Math.random() * nonce_chars_length);\n       result[i]=  chars[char_pos];\n   }\n   return result.join('');\n}\n\nexports.OAuth.prototype._createClient= function( port, hostname, method, path, headers, sslEnabled ) {\n  var options = {\n    host: hostname,\n    port: port,\n    path: path,\n    method: method,\n    headers: headers\n  };\n  var httpModel;\n  if( sslEnabled ) {\n    httpModel= https;\n  } else {\n    httpModel= http;\n  }\n  return httpModel.request(options);\n}\n\nexports.OAuth.prototype._prepareParameters= function( oauth_token, oauth_token_secret, method, url, extra_params ) {\n  var oauthParameters= {\n      \"oauth_timestamp\":        this._getTimestamp(),\n      \"oauth_nonce\":            this._getNonce(this._nonceSize),\n      \"oauth_version\":          this._version,\n      \"oauth_signature_method\": this._signatureMethod,\n      \"oauth_consumer_key\":     this._consumerKey\n  };\n\n  if( oauth_token ) {\n    oauthParameters[\"oauth_token\"]= oauth_token;\n  }\n\n  var sig;\n  if( this._isEcho ) {\n    sig = this._getSignature( \"GET\",  this._verifyCredentials,  this._normaliseRequestParams(oauthParameters), oauth_token_secret);\n  }\n  else {\n    if( extra_params ) {\n      for( var key in extra_params ) {\n        if (extra_params.hasOwnProperty(key)) oauthParameters[key]= extra_params[key];\n      }\n    }\n    var parsedUrl= URL.parse( url, false );\n\n    if( parsedUrl.query ) {\n      var key2;\n      var extraParameters= querystring.parse(parsedUrl.query);\n      for(var key in extraParameters ) {\n        var value= extraParameters[key];\n          if( typeof value == \"object\" ){\n            // TODO: This probably should be recursive\n            for(key2 in value){\n              oauthParameters[key + \"[\" + key2 + \"]\"] = value[key2];\n            }\n          } else {\n            oauthParameters[key]= value;\n          }\n        }\n    }\n\n    sig = this._getSignature( method,  url,  this._normaliseRequestParams(oauthParameters), oauth_token_secret);\n  }\n\n  var orderedParameters= this._sortRequestParams( this._makeArrayOfArgumentsHash(oauthParameters) );\n  orderedParameters[orderedParameters.length]= [\"oauth_signature\", sig];\n  return orderedParameters;\n}\n\nexports.OAuth.prototype._performSecureRequest= function( oauth_token, oauth_token_secret, method, url, extra_params, post_body, post_content_type,  callback ) {\n  var orderedParameters= this._prepareParameters(oauth_token, oauth_token_secret, method, url, extra_params);\n\n  if( !post_content_type ) {\n    post_content_type= \"application/x-www-form-urlencoded\";\n  }\n  var parsedUrl= URL.parse( url, false );\n  if( parsedUrl.protocol == \"http:\" && !parsedUrl.port ) parsedUrl.port= 80;\n  if( parsedUrl.protocol == \"https:\" && !parsedUrl.port ) parsedUrl.port= 443;\n\n  var headers= {};\n  var authorization = this._buildAuthorizationHeaders(orderedParameters);\n  if ( this._isEcho ) {\n    headers[\"X-Verify-Credentials-Authorization\"]= authorization;\n  }\n  else {\n    headers[\"Authorization\"]= authorization;\n  }\n\n  headers[\"Host\"] = parsedUrl.host\n\n  for( var key in this._headers ) {\n    if (this._headers.hasOwnProperty(key)) {\n      headers[key]= this._headers[key];\n    }\n  }\n\n  // Filter out any passed extra_params that are really to do with OAuth\n  for(var key in extra_params) {\n    if( this._isParameterNameAnOAuthParameter( key ) ) {\n      delete extra_params[key];\n    }\n  }\n\n  if( (method == \"POST\" || method == \"PUT\")  && ( post_body == null && extra_params != null) ) {\n    // Fix the mismatch between the output of querystring.stringify() and this._encodeData()\n    post_body= querystring.stringify(extra_params)\n                       .replace(/\\!/g, \"%21\")\n                       .replace(/\\'/g, \"%27\")\n                       .replace(/\\(/g, \"%28\")\n                       .replace(/\\)/g, \"%29\")\n                       .replace(/\\*/g, \"%2A\");\n  }\n\n  if( post_body ) {\n      if ( Buffer.isBuffer(post_body) ) {\n          headers[\"Content-length\"]= post_body.length;\n      } else {\n          headers[\"Content-length\"]= Buffer.byteLength(post_body);\n      }\n  } else {\n      headers[\"Content-length\"]= 0;\n  }\n\n  headers[\"Content-Type\"]= post_content_type;\n\n  var path;\n  if( !parsedUrl.pathname  || parsedUrl.pathname == \"\" ) parsedUrl.pathname =\"/\";\n  if( parsedUrl.query ) path= parsedUrl.pathname + \"?\"+ parsedUrl.query ;\n  else path= parsedUrl.pathname;\n\n  var request;\n  if( parsedUrl.protocol == \"https:\" ) {\n    request= this._createClient(parsedUrl.port, parsedUrl.hostname, method, path, headers, true);\n  }\n  else {\n    request= this._createClient(parsedUrl.port, parsedUrl.hostname, method, path, headers);\n  }\n\n  var clientOptions = this._clientOptions;\n  if( callback ) {\n    var data=\"\";\n    var self= this;\n\n    // Some hosts *cough* google appear to close the connection early / send no content-length header\n    // allow this behaviour.\n    var allowEarlyClose= OAuthUtils.isAnEarlyCloseHost( parsedUrl.hostname );\n    var callbackCalled= false;\n    var passBackControl = function( response ) {\n      if(!callbackCalled) {\n        callbackCalled= true;\n        if ( response.statusCode >= 200 && response.statusCode <= 299 ) {\n          callback(null, data, response);\n        } else {\n          // Follow 301 or 302 redirects with Location HTTP header\n          if((response.statusCode == 301 || response.statusCode == 302) && clientOptions.followRedirects && response.headers && response.headers.location) {\n            self._performSecureRequest( oauth_token, oauth_token_secret, method, response.headers.location, extra_params, post_body, post_content_type,  callback);\n          }\n          else {\n            callback({ statusCode: response.statusCode, data: data }, data, response);\n          }\n        }\n      }\n    }\n\n    request.on('response', function (response) {\n      response.setEncoding('utf8');\n      response.on('data', function (chunk) {\n        data+=chunk;\n      });\n      response.on('end', function () {\n        passBackControl( response );\n      });\n      response.on('close', function () {\n        if( allowEarlyClose ) {\n          passBackControl( response );\n        }\n      });\n    });\n\n    request.on(\"error\", function(err) {\n      if(!callbackCalled) {\n        callbackCalled= true;\n        callback( err )\n      }\n    });\n\n    if( (method == \"POST\" || method ==\"PUT\") && post_body != null && post_body != \"\" ) {\n      request.write(post_body);\n    }\n    request.end();\n  }\n  else {\n    if( (method == \"POST\" || method ==\"PUT\") && post_body != null && post_body != \"\" ) {\n      request.write(post_body);\n    }\n    return request;\n  }\n\n  return;\n}\n\nexports.OAuth.prototype.setClientOptions= function(options) {\n  var key,\n      mergedOptions= {},\n      hasOwnProperty= Object.prototype.hasOwnProperty;\n\n  for( key in this._defaultClientOptions ) {\n    if( !hasOwnProperty.call(options, key) ) {\n      mergedOptions[key]= this._defaultClientOptions[key];\n    } else {\n      mergedOptions[key]= options[key];\n    }\n  }\n\n  this._clientOptions= mergedOptions;\n};\n\nexports.OAuth.prototype.getOAuthAccessToken= function(oauth_token, oauth_token_secret, oauth_verifier,  callback) {\n  var extraParams= {};\n  if( typeof oauth_verifier == \"function\" ) {\n    callback= oauth_verifier;\n  } else {\n    extraParams.oauth_verifier= oauth_verifier;\n  }\n\n   this._performSecureRequest( oauth_token, oauth_token_secret, this._clientOptions.accessTokenHttpMethod, this._accessUrl, extraParams, null, null, function(error, data, response) {\n         if( error ) callback(error);\n         else {\n           var results= querystring.parse( data );\n           var oauth_access_token= results[\"oauth_token\"];\n           delete results[\"oauth_token\"];\n           var oauth_access_token_secret= results[\"oauth_token_secret\"];\n           delete results[\"oauth_token_secret\"];\n           callback(null, oauth_access_token, oauth_access_token_secret, results );\n         }\n   })\n}\n\n// Deprecated\nexports.OAuth.prototype.getProtectedResource= function(url, method, oauth_token, oauth_token_secret, callback) {\n  this._performSecureRequest( oauth_token, oauth_token_secret, method, url, null, \"\", null, callback );\n}\n\nexports.OAuth.prototype.delete= function(url, oauth_token, oauth_token_secret, callback) {\n  return this._performSecureRequest( oauth_token, oauth_token_secret, \"DELETE\", url, null, \"\", null, callback );\n}\n\nexports.OAuth.prototype.get= function(url, oauth_token, oauth_token_secret, callback) {\n  return this._performSecureRequest( oauth_token, oauth_token_secret, \"GET\", url, null, \"\", null, callback );\n}\n\nexports.OAuth.prototype._putOrPost= function(method, url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n  var extra_params= null;\n  if( typeof post_content_type == \"function\" ) {\n    callback= post_content_type;\n    post_content_type= null;\n  }\n  if ( typeof post_body != \"string\" && !Buffer.isBuffer(post_body) ) {\n    post_content_type= \"application/x-www-form-urlencoded\"\n    extra_params= post_body;\n    post_body= null;\n  }\n  return this._performSecureRequest( oauth_token, oauth_token_secret, method, url, extra_params, post_body, post_content_type, callback );\n}\n\n\nexports.OAuth.prototype.put= function(url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n  return this._putOrPost(\"PUT\", url, oauth_token, oauth_token_secret, post_body, post_content_type, callback);\n}\n\nexports.OAuth.prototype.post= function(url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n  return this._putOrPost(\"POST\", url, oauth_token, oauth_token_secret, post_body, post_content_type, callback);\n}\n\n/**\n * Gets a request token from the OAuth provider and passes that information back\n * to the calling code.\n *\n * The callback should expect a function of the following form:\n *\n * function(err, token, token_secret, parsedQueryString) {}\n *\n * This method has optional parameters so can be called in the following 2 ways:\n *\n * 1) Primary use case: Does a basic request with no extra parameters\n *  getOAuthRequestToken( callbackFunction )\n *\n * 2) As above but allows for provision of extra parameters to be sent as part of the query to the server.\n *  getOAuthRequestToken( extraParams, callbackFunction )\n *\n * N.B. This method will HTTP POST verbs by default, if you wish to override this behaviour you will\n * need to provide a requestTokenHttpMethod option when creating the client.\n *\n **/\nexports.OAuth.prototype.getOAuthRequestToken= function( extraParams, callback ) {\n   if( typeof extraParams == \"function\" ){\n     callback = extraParams;\n     extraParams = {};\n   }\n  // Callbacks are 1.0A related\n  if( this._authorize_callback ) {\n    extraParams[\"oauth_callback\"]= this._authorize_callback;\n  }\n  this._performSecureRequest( null, null, this._clientOptions.requestTokenHttpMethod, this._requestUrl, extraParams, null, null, function(error, data, response) {\n    if( error ) callback(error);\n    else {\n      var results= querystring.parse(data);\n\n      var oauth_token= results[\"oauth_token\"];\n      var oauth_token_secret= results[\"oauth_token_secret\"];\n      delete results[\"oauth_token\"];\n      delete results[\"oauth_token_secret\"];\n      callback(null, oauth_token, oauth_token_secret,  results );\n    }\n  });\n}\n\nexports.OAuth.prototype.signUrl= function(url, oauth_token, oauth_token_secret, method) {\n\n  if( method === undefined ) {\n    var method= \"GET\";\n  }\n\n  var orderedParameters= this._prepareParameters(oauth_token, oauth_token_secret, method, url, {});\n  var parsedUrl= URL.parse( url, false );\n\n  var query=\"\";\n  for( var i= 0 ; i < orderedParameters.length; i++) {\n    query+= orderedParameters[i][0]+\"=\"+ this._encodeData(orderedParameters[i][1]) + \"&\";\n  }\n  query= query.substring(0, query.length-1);\n\n  return parsedUrl.protocol + \"//\"+ parsedUrl.host + parsedUrl.pathname + \"?\" + query;\n};\n\nexports.OAuth.prototype.authHeader= function(url, oauth_token, oauth_token_secret, method) {\n  if( method === undefined ) {\n    var method= \"GET\";\n  }\n\n  var orderedParameters= this._prepareParameters(oauth_token, oauth_token_secret, method, url, {});\n  return this._buildAuthorizationHeaders(orderedParameters);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}